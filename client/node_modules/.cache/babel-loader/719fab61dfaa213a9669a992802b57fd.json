{"ast":null,"code":"var _jsxFileName = \"/Users/Tim/Desktop/devfinder/client/src/components/dashboard/Dashboard.js\";\nimport React, { FuseEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layouts/Spinner';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth,\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 42\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 56\n    }\n  });\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/Users/Tim/Desktop/devfinder/client/src/components/dashboard/Dashboard.js"],"names":["React","FuseEffect","PropTypes","connect","Spinner","getCurrentProfile","Dashboard","auth","profile","loading","useEffect","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACD,EAAAA,iBAAD;AAAoBE,EAAAA,IAApB;AAA0BC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAAnC,CAAD,KAA6D;AAC3EC,EAAAA,SAAS,CAAC,MAAM;AACZL,IAAAA,iBAAiB;AACpB,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAOI,OAAO,IAAID,OAAO,KAAK,IAAvB,gBAA8B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,gBAA4C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnD;AAGH,CAPD;;AASAF,SAAS,CAACK,SAAV,GAAsB;AAClBN,EAAAA,iBAAiB,EAAEH,SAAS,CAACU,IAAV,CAAeC,UADhB;AAElBN,EAAAA,IAAI,EAAEL,SAAS,CAACY,MAAV,CAAiBD,UAFL;AAGlBL,EAAAA,OAAO,EAAEN,SAAS,CAACY,MAAV,CAAiBD;AAHR,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BT,EAAAA,IAAI,EAAES,KAAK,CAACT,IADkB;AAE9BC,EAAAA,OAAO,EAAEQ,KAAK,CAACR;AAFe,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACY,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAA+CC,SAA/C,CAAf","sourcesContent":["import React, {FuseEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport Spinner from '../layouts/Spinner';\nimport {getCurrentProfile} from '../../actions/profile'\n\nconst Dashboard = ({getCurrentProfile, auth, profile: { profile, loading}}) => {\n    useEffect(() => {\n        getCurrentProfile();\n    }, []);\n    return loading && profile === null ? <Spinner /> : <Fragment> \n\n    </Fragment>;\n}\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile})(Dashboard)\n"]},"metadata":{},"sourceType":"module"}