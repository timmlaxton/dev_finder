{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED } from './types';\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/Tim/Desktop/devfinder/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","register","name","email","password","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,SAAvB;AACA,SAASC,gBAAT,EAA0BC,aAA1B,EAAyCC,WAAzC,QAA4D,SAA5D;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAMC,QAAN,IAAkB;AACrE,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAER,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AAEA,MAAI;AACA,UAAMO,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAW,WAAX,EAAwBJ,IAAxB,EAA8BF,MAA9B,CAAlB;AACAD,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEf,gBADD;AAELgB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAND,CAME,OAAOC,GAAP,EAAY;AACV,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AAEA,QAAGA,MAAH,EAAW;AACPA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIf,QAAQ,CAACR,QAAQ,CAACuB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACH;;AACDhB,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEd;AADD,KAAD,CAAR;AAGH;AACJ,CAzBM","sourcesContent":["import axios from 'axios';\nimport {setAlert} from './alert'\nimport { REGISTER_SUCCESS,REGISTER_FAIL, USER_LOADED,} from './types';\n\nexport const register = ({ name, email, password}) =>  async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ name, email, password})\n\n    try {\n        const res = await axios.post('api/users', body, config);\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        });\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n        dispatch({\n            type: REGISTER_FAIL\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}