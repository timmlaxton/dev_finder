{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, ACCOUNT_DELETED, CLEAR_PROFILE, GET_PROFILES } from './types';\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getProfile = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This cannot be undone!')) {\n    try {\n      const res = await axios.delete('api/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Your account has been deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n\n  ;\n};","map":{"version":3,"sources":["/Users/Tim/Desktop/devfinder/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","ACCOUNT_DELETED","CLEAR_PROFILE","GET_PROFILES","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","getProfile","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n    GET_PROFILE,\n    PROFILE_ERROR,\n    UPDATE_PROFILE,\n    ACCOUNT_DELETED,\n    CLEAR_PROFILE,\n    GET_PROFILES\n\n} from './types';\n\nexport const getCurrentProfile = () => async dispatch => {\n    try {\n      const res = await axios.get('api/profile/me');\n      \n      dispatch({\n          type: GET_PROFILE,\n          payload: res.data\n      });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        });\n    }\n}\n\nexport const getProfiles = () => async dispatch => {\n    dispatch({ type: CLEAR_PROFILE});\n\n    try {\n      const res = await axios.get('api/profile');\n      \n      dispatch({\n          type: GET_PROFILES,\n          payload: res.data\n      });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        });\n    }\n}\n\nexport const getProfile = () => async dispatch => {\n    dispatch({ type: CLEAR_PROFILE});\n\n    try {\n      const res = await axios.get('api/profile');\n      \n      dispatch({\n          type: GET_PROFILES,\n          payload: res.data\n      });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        });\n    }\n}\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const res = await axios.post('/api/profile', formData, config)\n\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert(edit ? 'Profile Updated': 'Profile Created', 'success'));\n\n\n        if(!edit) {\n        history.push('/dashboard')\n    }\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        });\n    }\n}\n\nexport const addExperience = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const res = await axios.put('api/profile/experience', formData, config)\n\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Experience Added', 'success'));\n        \n        history.push('/dashboard')\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        });\n    }\n}\n\nexport const addEducation = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const res = await axios.put('/api/profile/education', formData, config)\n\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Education Added', 'success'));\n        history.push('/dashboard')\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\nexport const deleteExperience = id => async dispatch => {\n    try {\n        const res = await axios.delete(`api/profile/experience/${id}`);\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Experience Removed', 'success'));\n\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        });\n    }\n}\n\nexport const deleteEducation = id => async dispatch => {\n    try {\n        const res = await axios.delete(`api/profile/education/${id}`);\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Education Removed', 'success'));\n\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\nexport const deleteAccount = () => async dispatch => {\n    if(window.confirm('Are you sure? This cannot be undone!')){\n        try {\n            const res = await axios.delete('api/profile');\n            dispatch({type: CLEAR_PROFILE});\n            dispatch({type: ACCOUNT_DELETED});\n    \n            dispatch(setAlert('Your account has been deleted'));\n    \n        } catch (err) {\n            dispatch({\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status}\n            });\n        }\n    };\n    }\n    \n    \n   \n"]},"metadata":{},"sourceType":"module"}