{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from './types';\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    header: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('api/user', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/Tim/Desktop/devfinder/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","register","name","email","password","dispatch","config","header","body","JSON","stringify","res","post","type","payload","data","error","errors","response","forEach","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,SAAvB;AAEA,SACIC,gBADJ,EAEIC,aAFJ,QAGO,SAHP;AAKA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAMC,QAAN,IAAkB;AACrE,QAAMC,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE;AACJ,sBAAgB;AADZ;AADG,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAER,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AAEA,MAAI;AACA,UAAMO,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAW,UAAX,EAAuBJ,IAAvB,EAA6BF,MAA7B,CAAlB;AACAD,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEd,gBADD;AAELe,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,UAAMC,MAAM,GAAGD,KAAK,CAACE,QAAN,CAAeH,IAAf,CAAoBE,MAAnC;;AAEA,QAAGA,MAAH,EAAW;AACPA,MAAAA,MAAM,CAACE,OAAP,CAAeH,KAAK,IAAIX,QAAQ,CAACP,QAAQ,CAACkB,KAAK,CAACI,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACH;;AACDf,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEb;AADD,KAAD,CAAR;AAGH;AACJ,CAzBM","sourcesContent":["import axios from 'axios';\nimport {setAlert} from './alert'\n\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL\n} from './types';\n\nexport const register = ({ name, email, password}) =>  async dispatch => {\n    const config = {\n        header: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ name, email, password})\n\n    try {\n        const res = await axios.post('api/user', body, config);\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        });\n    } catch (error) {\n        const errors = error.response.data.errors;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n        dispatch({\n            type: REGISTER_FAIL\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}