{"ast":null,"code":"import { SET_ALERT, REOMVE_ALERT } from '../actions/types';\nconst initialState = [];\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case 'SET_ALERT':\n      return [...state, action.payload];\n\n    case 'REMOVE_ALERT':\n      return state.filter(al);\n  }\n}","map":{"version":3,"sources":["/Users/Tim/Desktop/devfinder/client/src/reducers/alert.js"],"names":["SET_ALERT","REOMVE_ALERT","initialState","state","action","type","payload","filter","al"],"mappings":"AAAA,SAAUA,SAAV,EAAqBC,YAArB,QAAwC,kBAAxC;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,eAAe,UAASC,KAAK,GAAGD,YAAjB,EAA+BE,MAA/B,EAAuC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,WAAL;AACI,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACJ,SAAK,cAAL;AACI,aAAOH,KAAK,CAACI,MAAN,CAAaC,EAAb,CAAP;AAJR;AAMH","sourcesContent":["import  { SET_ALERT, REOMVE_ALERT} from '../actions/types'\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case 'SET_ALERT':\n            return [...state, action.payload];\n        case 'REMOVE_ALERT':\n            return state.filter(al)\n    }\n}"]},"metadata":{},"sourceType":"module"}